/*
api.video

api.video is an API that encodes on the go to facilitate immediate playback, enhancing viewer streaming experiences across multiple devices and platforms. You can stream live or on-demand online videos within minutes.

The version of the OpenAPI document: 1


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { Metadata } from './metadata';
import { VideoAssets } from './video-assets';
import { VideoSource } from './video-source';

/**
 * 
 * @export
 * @interface Video
 */
export interface Video {
    /**
     * One array of tags (each tag is a string) in order to categorize a video. Tags may include spaces.  
     * @type {Array<string>}
     * @memberof Video
     */
    'tags'?: Array<string>;
    /**
     * The title of the video content. 
     * @type {string}
     * @memberof Video
     */
    'title'?: string;
    /**
     * A description for the video content. 
     * @type {string}
     * @memberof Video
     */
    'description'?: string;
    /**
     * The unique identifier of the video object.
     * @type {string}
     * @memberof Video
     */
    'videoId': string;
    /**
     * When a video was created, presented in ISO-8601 format.
     * @type {string}
     * @memberof Video
     */
    'createdAt'?: string;
    /**
     * The date and time the API created the video. Date and time are provided using ISO-8601 UTC format.
     * @type {string}
     * @memberof Video
     */
    'publishedAt'?: string;
    /**
     * The date and time the video was updated. Date and time are provided using ISO-8601 UTC format.
     * @type {string}
     * @memberof Video
     */
    'updatedAt'?: string;
    /**
     * Metadata you can use to categorise and filter videos. Metadata is a list of dictionaries, where each dictionary represents a key value pair for categorising a video. [Dynamic Metadata](https://api.video/blog/endpoints/dynamic-metadata/) allows you to define a key that allows any value pair. 
     * @type {Array<Metadata>}
     * @memberof Video
     */
    'metadata'?: Array<Metadata>;
    /**
     * 
     * @type {VideoSource}
     * @memberof Video
     */
    'source'?: VideoSource;
    /**
     * 
     * @type {VideoAssets}
     * @memberof Video
     */
    'assets'?: VideoAssets;
    /**
     * The id of the player that will be applied on the video. 
     * @type {string}
     * @memberof Video
     */
    'playerId'?: string;
    /**
     * Defines if the content is publicly reachable or if a unique token is needed for each play session. Default is true. Tutorials on [private videos](https://api.video/blog/endpoints/private-videos/). 
     * @type {boolean}
     * @memberof Video
     */
    'public'?: boolean;
    /**
     * Defines if video is panoramic. 
     * @type {boolean}
     * @memberof Video
     */
    'panoramic'?: boolean;
    /**
     * This lets you know whether mp4 is supported. If enabled, an mp4 URL will be provided in the response for the video. 
     * @type {boolean}
     * @memberof Video
     */
    'mp4Support'?: boolean;
}

